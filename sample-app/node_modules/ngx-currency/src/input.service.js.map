{"version":3,"sources":["../../src/input.service.ts"],"names":[],"mappings":"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","file":"input.service.js","sourceRoot":"","sourcesContent":["import {InputManager} from \"./input.manager\";\nimport { CurrencyMaskConfig } from \"./currency-mask.config\";\n\nexport class InputService {\n\n  private inputManager: InputManager;\n\n  constructor(private htmlInputElement: any, private options: CurrencyMaskConfig) {\n    this.inputManager = new InputManager(htmlInputElement);\n  }\n\n  addNumber(keyCode: number): void {\n    if (!this.rawValue) {\n      this.rawValue = this.applyMask(false, \"0\");\n    }\n\n    let keyChar = String.fromCharCode(keyCode);\n    let selectionStart = this.inputSelection.selectionStart;\n    let selectionEnd = this.inputSelection.selectionEnd;\n    this.rawValue = this.rawValue.substring(0, selectionStart) + keyChar + this.rawValue.substring(selectionEnd, this.rawValue.length);\n    this.updateFieldValue(selectionStart + 1);\n  }\n\n  applyMask(isNumber: boolean, rawValue: string): string {\n    let {allowNegative, decimal, precision, prefix, suffix, thousands, nullable} = this.options;\n    rawValue = isNumber ? new Number(rawValue).toFixed(precision) : rawValue;\n    let onlyNumbers = rawValue.replace(/[^0-9]/g, \"\");\n\n    if (!onlyNumbers) {\n      return \"\";\n    }\n\n    let integerPart = onlyNumbers.slice(0, onlyNumbers.length - precision).replace(/^0*/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands);\n\n    if (integerPart == \"\") {\n      integerPart = \"0\";\n    }\n\n    let newRawValue = integerPart;\n    let decimalPart = onlyNumbers.slice(onlyNumbers.length - precision);\n\n    if (precision > 0) {\n      newRawValue += decimal + decimalPart;\n    }\n\n    let isZero = parseInt(integerPart) == 0 && (parseInt(decimalPart) == 0 || decimalPart == \"\");\n    let operator = (rawValue.indexOf(\"-\") > -1 && allowNegative && !isZero) ? \"-\" : \"\";\n    return operator + prefix + newRawValue + suffix;\n  }\n\n  clearMask(rawValue: string): number {\n    \n    if (this.isNullable() && rawValue === \"\")\n      return null;\n\n    let value = (rawValue || \"0\").replace(this.options.prefix, \"\").replace(this.options.suffix, \"\");\n\n    if (this.options.thousands) {\n      value = value.replace(new RegExp(\"\\\\\" + this.options.thousands, \"g\"), \"\");\n    }\n\n    if (this.options.decimal) {\n      value = value.replace(this.options.decimal, \".\");\n    }\n\n    return parseFloat(value);\n  }\n\n  changeToNegative(): void {\n    if (this.options.allowNegative && this.rawValue != \"\" && this.rawValue.charAt(0) != \"-\" && this.value != 0) {\n      this.rawValue = \"-\" + this.rawValue;\n    }\n  }\n\n  changeToPositive(): void {\n    this.rawValue = this.rawValue.replace(\"-\", \"\");\n  }\n\n  removeNumber(keyCode: number): void {\n    if (this.isNullable() && this.value == 0){\n      this.rawValue = null;\n      return;\n    }\n    \n    let selectionEnd = this.inputSelection.selectionEnd;\n    let selectionStart = this.inputSelection.selectionStart;\n\n    if (selectionStart > this.rawValue.length - this.options.suffix.length) {\n      selectionEnd = this.rawValue.length - this.options.suffix.length;\n      selectionStart = this.rawValue.length - this.options.suffix.length;\n    }\n\n    selectionEnd = keyCode == 46 || keyCode == 63272 ? selectionEnd + 1 : selectionEnd;\n    selectionStart = keyCode == 8 ? selectionStart - 1 : selectionStart;\n    this.rawValue = this.rawValue.substring(0, selectionStart) + this.rawValue.substring(selectionEnd, this.rawValue.length);\n    this.updateFieldValue(selectionStart);\n  }\n\n  updateFieldValue(selectionStart?: number): void {\n    let newRawValue = this.applyMask(false, this.rawValue || \"\");\n    selectionStart = selectionStart == undefined ? this.rawValue.length : selectionStart;\n    this.inputManager.updateValueAndCursor(newRawValue, this.rawValue.length, selectionStart);\n  }\n\n  updateOptions(options: any): void {\n    let value: number = this.value;\n    this.options = options;\n    this.value = value;\n  }\n\n  prefixLenght():any{\n    return this.options.prefix.length;\n  }\n\n  isNullable(){\n    return this.options.nullable;\n  }\n\n  get canInputMoreNumbers(): boolean {\n    return this.inputManager.canInputMoreNumbers;\n  }\n\n  get inputSelection(): any {\n    return this.inputManager.inputSelection;\n  }\n\n  get rawValue(): string {\n    return this.inputManager.rawValue;\n  }\n\n  set rawValue(value: string) {\n    this.inputManager.rawValue = value;\n  }\n\n  get storedRawValue(): string {\n    return this.inputManager.storedRawValue;\n  }\n\n  get value(): number {\n    return this.clearMask(this.rawValue);\n  }\n\n  set value(value: number) {\n    this.rawValue = this.applyMask(true, \"\" + value);\n  }\n}\n"]}