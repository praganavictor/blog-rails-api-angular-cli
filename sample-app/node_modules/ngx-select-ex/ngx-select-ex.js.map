{"version":3,"file":"ngx-select-ex.js","sources":["ts/src/app/lib/ngx-select-ex.ts","ts/src/app/lib/ngx-select/ngx-select.module.ts","ts/src/app/lib/ngx-select/ngx-select.component.ts","ts/src/app/lib/ngx-select/ngx-templates.directive.ts","ts/src/app/lib/ngx-select/ngx-select.classes.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {NgxSelectModule,NGX_SELECT_OPTIONS,INgxSelectComponentMouseEvent,NgxSelectComponent,TNgxSelectOptionType,INgxSelectOptionBase,INgxSelectOption,INgxSelectOptGroup,INgxOptionNavigated,INgxSelectOptions,NgxSelectOption,NgxSelectOptGroup,TSelectOption,NgxSelectOptionDirective,NgxSelectOptionSelectedDirective,NgxSelectOptionNotFoundDirective} from './public_api';\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxSelectOptions} from './ngx-select.interfaces';\nexport class NgxSelectModule {\n/**\n * @param {?} options\n * @return {?}\n */\nstatic forRoot(options: INgxSelectOptions): ModuleWithProviders {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgxSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSelectModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n    AfterContentChecked, DoCheck, Input, Output, ViewChild,\n    Component, ElementRef, EventEmitter, forwardRef, HostListener, IterableDiffer, IterableDiffers, ChangeDetectorRef, ContentChild,\n    TemplateRef, Optional, Inject, InjectionToken\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Subject} from 'rxjs/Subject';\nimport {Observable} from 'rxjs/Observable';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport'rxjs/add/observable/empty';\nimport'rxjs/add/observable/from';\nimport'rxjs/add/observable/of';\nimport'rxjs/add/operator/distinctUntilChanged';\nimport'rxjs/add/operator/combineLatest';\nimport'rxjs/add/operator/mergeMap';\nimport'rxjs/add/operator/toArray';\nimport'rxjs/add/operator/filter';\nimport'rxjs/add/operator/share';\nimport'rxjs/add/operator/merge';\nimport'rxjs/add/operator/map';\nimport'rxjs/add/operator/do';\nimport * as lodashNs from 'lodash';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\n\nconst /** @type {?} */ _ = lodashNs;\nconst /** @type {?} */ escapeString = escapeStringNs;\n\nexport const /** @type {?} */ NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\ntype ENavigation = number;\nlet ENavigation: any = {};\nENavigation.first = 0;\nENavigation.previous = 1;\nENavigation.next = 2;\nENavigation.last = 3;\nENavigation[ENavigation.first] = \"first\";\nENavigation[ENavigation.previous] = \"previous\";\nENavigation[ENavigation.next] = \"next\";\nENavigation[ENavigation.last] = \"last\";\n\n/**\n * @param {?} obj\n * @param {?} propertyName\n * @return {?}\n */\nfunction propertyExists(obj: Object, propertyName: string) {\n    return propertyName in obj;\n}\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked {\npublic items: any[];\npublic optionValueField = 'id';\npublic optionTextField = 'text';\npublic optGroupLabelField = 'label';\npublic optGroupOptionsField = 'options';\npublic multiple = false;\npublic allowClear = false;\npublic placeholder = '';\npublic noAutoComplete = false;\npublic disabled = false;\npublic defaultValue: any[] = [];\npublic autoSelectSingleOption = false;\npublic autoClearSearch = false;\npublic noResultsFound = 'No results found';\npublic size: 'small' | 'default' | 'large' = 'default';\npublic searchCallback: (search: string, item: INgxSelectOption) => boolean;\npublic keyCodeToRemoveSelected = 'Delete';\npublic keyCodeToOptionsOpen = 'Enter';\npublic keyCodeToOptionsClose = 'Escape';\npublic keyCodeToOptionsSelect = 'Enter';\npublic keyCodeToNavigateFirst = 'ArrowLeft';\npublic keyCodeToNavigatePrevious = 'ArrowUp';\npublic keyCodeToNavigateNext = 'ArrowDown';\npublic keyCodeToNavigateLast = 'ArrowRight';\npublic typed = new EventEmitter<string>();\npublic focus = new EventEmitter<void>();\npublic blur = new EventEmitter<void>();\npublic open = new EventEmitter<void>();\npublic close = new EventEmitter<void>();\npublic select = new EventEmitter<any>();\npublic remove = new EventEmitter<any>();\npublic navigated = new EventEmitter<INgxOptionNavigated>();\n\n     protected mainElRef: ElementRef;\n     protected inputElRef: ElementRef;\n     protected choiceMenuElRef: ElementRef;\n\n     templateOption: NgxSelectOptionDirective;\n     templateSelectedOption: NgxSelectOptionSelectedDirective;\n     templateOptionNotFound: NgxSelectOptionNotFoundDirective;\npublic optionsOpened = false;\npublic optionsFiltered: TSelectOption[];\nprivate optionActive: NgxSelectOption;\nprivate itemsDiffer: IterableDiffer<any>;\nprivate defaultValueDiffer: IterableDiffer<any[]>;\nprivate actualValue: any[] = [];\npublic subjOptions = new BehaviorSubject<TSelectOption[]>([]);\nprivate subjSearchText = new BehaviorSubject<string>('');\nprivate subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\nprivate subjExternalValue = new BehaviorSubject<any[]>([]);\nprivate subjDefaultValue = new BehaviorSubject<any[]>([]);\nprivate subjRegisterOnChange = new Subject();\nprivate cacheOptionsFilteredFlat: NgxSelectOption[];\nprivate cacheElementOffsetTop: number;\nprivate _focusToInput = false;\npublic isFocused = false;\n/**\n * @param {?} iterableDiffers\n * @param {?} sanitizer\n * @param {?} cd\n * @param {?} defaultOptions\n */\nconstructor(iterableDiffers: IterableDiffers,\nprivate sanitizer: DomSanitizer,\nprivate cd: ChangeDetectorRef,\n                  defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // differs\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // observers\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        let cacheExternalValue: any[];\n        const subjActualValue = this.subjExternalValue\n            .map((v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v))\n            .merge(this.subjOptionsSelected.map((options: NgxSelectOption[]) =>\n                options.map((o: NgxSelectOption) => o.value)\n            ))\n            .combineLatest(this.subjDefaultValue, (eVal: any[], dVal: any[]) => {\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            })\n            .distinctUntilChanged((x, y) => _.isEqual(x, y))\n            .share();\n\n        subjActualValue\n            .combineLatest(this.subjRegisterOnChange, (actualValue: any[]) => actualValue)\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        this.subjOptions\n            .flatMap((options: TSelectOption[]) => Observable\n                .from(options)\n                .flatMap((option: TSelectOption) => option instanceof NgxSelectOption\n                    ? Observable.of(option)\n                    : (option instanceof NgxSelectOptGroup ? Observable.from(option.options) : Observable.empty())\n                )\n                .toArray()\n            )\n            .combineLatest(subjActualValue, (optionsFlat: NgxSelectOption[], actualValue: any[]) => {\n                Observable.from(optionsFlat)\n                    .filter((option: NgxSelectOption) => actualValue.indexOf(option.value) !== -1)\n                    .toArray()\n                    .filter((options: NgxSelectOption[]) => !_.isEqual(options, this.subjOptionsSelected.value))\n                    .subscribe((options: NgxSelectOption[]) => this.subjOptionsSelected.next(options));\n            })\n            .subscribe();\n\n        this.subjOptions\n            .combineLatest(this.subjOptionsSelected, this.subjSearchText,\n                (options: TSelectOption[], selectedOptions: NgxSelectOption[], search: string) => {\n                    this.optionsFiltered = this.filterOptions(search, options, selectedOptions);\n                    this.cacheOptionsFilteredFlat = null;\n\n                    this.optionsFilteredFlat()\n                        .filter((flatOptions: NgxSelectOption[]) =>\n                            this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n                        )\n                        .subscribe((flatOptions: NgxSelectOption[]) => this.subjOptionsSelected.next(flatOptions));\n                }\n            )\n            .subscribe();\n    }\n/**\n * @param {?=} otherClassNames\n * @param {?=} useFormControl\n * @return {?}\n */\npublic setFormControlSize(otherClassNames: Object = {}, useFormControl: boolean = true) {\n        const /** @type {?} */ formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large'\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n/**\n * @return {?}\n */\npublic setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n/**\n * @return {?}\n */\npublic get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n/**\n * @return {?}\n */\nprivate optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return Observable.of(this.cacheOptionsFilteredFlat);\n        }\n\n        return Observable.from(this.optionsFiltered)\n            .flatMap<TSelectOption, NgxSelectOption>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? Observable.of(option) :\n                    (option instanceof NgxSelectOptGroup ? Observable.from(option.optionsFiltered) : Observable.empty())\n            )\n            .filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled)\n            .toArray()\n            .do((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat);\n    }\n/**\n * @param {?} navigation\n * @return {?}\n */\nprivate navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat()\n            .map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const /** @type {?} */ navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let /** @type {?} */ newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n            .subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n/**\n * @return {?}\n */\npublic ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const /** @type {?} */ defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n/**\n * @return {?}\n */\npublic ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n    }\n/**\n * @return {?}\n */\npublic canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n/**\n * @return {?}\n */\npublic focusToInput(): void {\n        this._focusToInput = true;\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic inputKeyDown(event: KeyboardEvent) {\n        const /** @type {?} */ keysForOpenedState = [\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast,\n        ];\n        const /** @type {?} */ keysForClosedState = [this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected];\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case this.keyCodeToOptionsSelect:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case this.keyCodeToOptionsOpen:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    break;\n            }\n        }\n    }\n/**\n * @param {?} event\n * @return {?}\n */\npublic mainKeyUp(event: KeyboardEvent): void {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(true);\n        }\n    }\n/**\n * @param {?} index\n * @param {?} option\n * @return {?}\n */\npublic trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n/**\n * @return {?}\n */\npublic checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nprotected inputKeyUp(value: string = '') {\n        if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nprotected doInputText(value: string) {\n        if (this.optionsOpened) {\n            this.typed.emit(value);\n        }\n    }\n/**\n * @param {?=} value\n * @return {?}\n */\nprotected inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n/**\n * @param {?} html\n * @return {?}\n */\nprotected sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n/**\n * @param {?} option\n * @return {?}\n */\nprotected highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n/**\n * @param {?} option\n * @param {?=} event\n * @return {?}\n */\nprotected optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            this.optionsClose(true);\n            this.onTouched();\n        }\n    }\n/**\n * @param {?} option\n * @param {?} event\n * @return {?}\n */\nprotected optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n/**\n * @param {?} option\n * @param {?} element\n * @return {?}\n */\nprotected isOptionActive(option: NgxSelectOption, element: HTMLElement) {\n        if (this.optionActive === option) {\n            this.ensureVisibleElement(element);\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} navigated\n * @return {?}\n */\nprotected optionActivate(navigated: INgxOptionNavigated): void {\n        if (!navigated.activeOption || !navigated.activeOption.disabled) {\n            this.optionActive = navigated.activeOption;\n            this.navigated.emit(navigated);\n        }\n    }\n/**\n * @param {?} search\n * @param {?} options\n * @param {?} selectedOptions\n * @return {?}\n */\nprivate filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const /** @type {?} */ regExp = new RegExp(escapeString(search), 'i'), /** @type {?} */\n            filterOption = (option: NgxSelectOption) => {\n                if (this.searchCallback) {\n                    return this.searchCallback(search, option);\n                }\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n            };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption( /** @type {?} */((<NgxSelectOption>option)));\n            } else if (option instanceof NgxSelectOptGroup) {\n                const /** @type {?} */ subOp = /** @type {?} */(( <NgxSelectOptGroup>option));\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const /** @type {?} */ container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n/**\n * @param {?=} search\n * @return {?}\n */\npublic optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.optionsFilteredFlat().subscribe((options: NgxSelectOption[]) => this.optionActivate({\n                    activeOption: this.subjOptionsSelected.value[0],\n                    filteredOptionList: options,\n                    index: options.indexOf(this.subjOptionsSelected.value[0])\n                }));\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n        }\n    }\n/**\n * @param {?=} focusToHost\n * @return {?}\n */\npublic optionsClose(focusToHost: boolean = false) {\n        this.optionsOpened = false;\n        if (focusToHost) {\n            const /** @type {?} */ x = window.scrollX, /** @type {?} */ y = window.scrollY;\n            this.mainElRef.nativeElement.focus();\n            window.scrollTo(x, y);\n        }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n/**\n * @param {?} data\n * @return {?}\n */\nprivate buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const /** @type {?} */ result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            let /** @type {?} */ option: NgxSelectOption;\n            data.forEach((item: any) => {\n                const /** @type {?} */ isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const /** @type {?} */ optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        if (option = this.buildOption(subOption, optGroup)) {\n                            optGroup.options.push(option);\n                        }\n                    });\n                    result.push(optGroup);\n                } else if (option = this.buildOption(item, null)) {\n                    result.push(option);\n                }\n            });\n        }\n        return result;\n    }\n/**\n * @param {?} data\n * @param {?} parent\n * @return {?}\n */\nprivate buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let /** @type {?} */ value, /** @type {?} */ text, /** @type {?} */ disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\npublic onChange = (v: any) => v;\npublic onTouched: () => void = () => null;\n/**\n * @param {?} obj\n * @return {?}\n */\npublic writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n/**\n * @param {?} isDisabled\n * @return {?}\n */\npublic setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'ngx-select',\n    template: `\n      <div #main [tabindex]=\"disabled? -1: 0\" class=\"ngx-select dropdown\"\n           [ngClass]=\"setFormControlSize({\n              'ngx-select_multiple form-control': multiple === true,\n              'open show': optionsOpened && optionsFiltered.length\n           }, multiple === true)\"\n           (click)=\"mainClicked($event)\" (focusin)=\"mainClicked($event)\"\n           (focus)=\"focusToInput()\" (keydown)=\"inputKeyDown($event)\"\n           (keyup)=\"mainKeyUp($event)\">\n          <div [ngClass]=\"{ 'ngx-select__disabled': disabled}\"></div>\n\n          <!-- single selected item -->\n          <div class=\"ngx-select__selected\"\n               *ngIf=\"(multiple === false) && (!optionsOpened || noAutoComplete)\">\n              <div class=\"ngx-select__toggle btn form-control\" [ngClass]=\"setFormControlSize(setBtnSize())\"\n                   (click)=\"optionsOpen()\">\n\n                  <span *ngIf=\"!optionsSelected.length\" class=\"ngx-select__placeholder text-muted\">\n                      <span [innerHtml]=\"placeholder\"></span>\n                  </span>\n                  <span *ngIf=\"optionsSelected.length\"\n                        class=\"ngx-select__selected-single pull-left float-left\"\n                        [ngClass]=\"{'ngx-select__allow-clear': allowClear}\">\n                      <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\n                                    [ngTemplateOutletContext]=\"{$implicit: optionsSelected[0], index: 0,\n                                                                text: sanitize(optionsSelected[0].text)}\">\n                      </ng-container>\n                  </span>\n                  <span class=\"ngx-select__toggle-buttons\">\n                      <a class=\"ngx-select__clear btn btn-sm btn-link\" *ngIf=\"canClearNotMultiple()\"\n                         [ngClass]=\"setBtnSize()\"\n                         (click)=\"optionRemove(optionsSelected[0], $event)\">\n                          <i class=\"ngx-select__clear-icon\"></i>\n                      </a>\n                      <i class=\"dropdown-toggle\"></i>\n                      <i class=\"ngx-select__toggle-caret caret\"></i>\n                  </span>\n              </div>\n          </div>\n\n          <!-- multiple selected items -->\n          <div class=\"ngx-select__selected\" *ngIf=\"multiple === true\">\n              <span *ngFor=\"let option of optionsSelected; trackBy: trackByOption; let idx = index\">\n                  <span tabindex=\"-1\" [ngClass]=\"setBtnSize()\"\n                        class=\"ngx-select__selected-plural btn btn-default btn-secondary btn-xs\">\n\n                      <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\n                                    [ngTemplateOutletContext]=\"{$implicit: option, index: idx, text: sanitize(option.text)}\">\n                      </ng-container>\n\n                      <a class=\"ngx-select__clear btn btn-sm btn-link pull-right float-right\" [ngClass]=\"setBtnSize()\"\n                         (click)=\"optionRemove(option, $event)\">\n                          <i class=\"ngx-select__clear-icon\"></i>\n                      </a>\n                  </span>\n              </span>\n          </div>\n\n          <!-- live search an item from the list -->\n          <input #input type=\"text\" class=\"ngx-select__search form-control\" [ngClass]=\"setFormControlSize()\"\n                 *ngIf=\"checkInputVisibility()\"\n                 [tabindex]=\"multiple === false? -1: 0\"\n                 (keydown)=\"inputKeyDown($event)\"\n                 (keyup)=\"inputKeyUp(input.value)\"\n                 (input)=\"doInputText(input.value)\"\n                 [disabled]=\"disabled\"\n                 [placeholder]=\"optionsSelected.length? '': placeholder\"\n                 (click)=\"inputClick(input.value)\"\n                 autocomplete=\"false\"\n                 autocorrect=\"off\"\n                 autocapitalize=\"off\"\n                 spellcheck=\"false\"\n                 role=\"combobox\">\n\n          <!-- options template -->\n          <ul #choiceMenu role=\"menu\" *ngIf=\"isFocused\" class=\"ngx-select__choices dropdown-menu\"\n              [class.show]=\"optionsOpened && subjOptions.value.length\">\n              <li class=\"ngx-select__item-group\" role=\"menuitem\"\n                  *ngFor=\"let opt of optionsFiltered; trackBy: trackByOption; let idxGroup=index\">\n                  <div class=\"divider dropdown-divider\" *ngIf=\"opt.type === 'optgroup' && (idxGroup > 0)\"></div>\n                  <div class=\"dropdown-header\" *ngIf=\"opt.type === 'optgroup'\">{{opt.label}}</div>\n\n                  <a href=\"#\" #choiceItem class=\"ngx-select__item dropdown-item\"\n                     *ngFor=\"let option of (opt.optionsFiltered || [opt]); trackBy: trackByOption; let idxOption = index\"\n                     [ngClass]=\"{\n                          'ngx-select__item_active active': isOptionActive(option, choiceItem),\n                          'ngx-select__item_disabled disabled': option.disabled\n                     }\"\n                     (mouseenter)=\"optionActivate({\n                          activeOption: option,\n                          filteredOptionList: optionsFiltered,\n                          index: optionsFiltered.indexOf(option)\n                     })\"\n                     (click)=\"optionSelect(option, $event)\">\n                      <ng-container [ngTemplateOutlet]=\"templateOption || defaultTemplateOption\"\n                                    [ngTemplateOutletContext]=\"{$implicit: option, text: highlightOption(option),\n                                    index: idxGroup, subIndex: idxOption}\"></ng-container>\n                  </a>\n              </li>\n              <li class=\"ngx-select__item ngx-select__item_no-found dropdown-header\" *ngIf=\"!optionsFiltered.length\">\n                  <ng-container [ngTemplateOutlet]=\"templateOptionNotFound || defaultTemplateOptionNotFound\"></ng-container>\n              </li>\n          </ul>\n\n          <!--Default templates-->\n          <ng-template #defaultTemplateOption let-text=\"text\">\n              <span [innerHtml]=\"text\"></span>\n          </ng-template>\n\n          <ng-template #defaultTemplateOptionNotFound>\n              {{noResultsFound}}\n          </ng-template>\n\n      </div>\n    `,\n    styles: [`\n      .ngx-select {\n        /* Fix caret going into new line in Firefox */ }\n        .ngx-select_multiple {\n          height: auto;\n          padding: 3px 3px 0 3px; }\n        .ngx-select_multiple .ngx-select__search {\n          background-color: transparent !important;\n          /* To prevent double background when disabled */\n          border: none;\n          outline: none;\n          -webkit-box-shadow: none;\n                  box-shadow: none;\n          height: 1.6666em;\n          padding: 0;\n          margin-bottom: 3px; }\n        .ngx-select__disabled {\n          background-color: #eceeef;\n          border-radius: 4px;\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          z-index: 5;\n          opacity: 0.6;\n          top: 0;\n          left: 0;\n          cursor: not-allowed; }\n        .ngx-select__toggle {\n          outline: 0;\n          position: relative;\n          text-align: left !important;\n          /* Instead of center because of .btn */\n          color: #333;\n          background-color: #fff;\n          border-color: #ccc;\n          display: -webkit-inline-box;\n          display: -ms-inline-flexbox;\n          display: inline-flex;\n          -webkit-box-align: stretch;\n              -ms-flex-align: stretch;\n                  align-items: stretch;\n          -webkit-box-pack: justify;\n              -ms-flex-pack: justify;\n                  justify-content: space-between; }\n          .ngx-select__toggle:hover {\n            color: #333;\n            background-color: #e6e6e6;\n            border-color: #adadad; }\n        .ngx-select__toggle-buttons {\n          -ms-flex-negative: 0;\n              flex-shrink: 0;\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center; }\n        .ngx-select__toggle-caret {\n          position: absolute;\n          height: 10px;\n          top: 50%;\n          right: 10px;\n          margin-top: -2px; }\n        .ngx-select__placeholder {\n          float: left; }\n        .ngx-select__clear {\n          margin-right: 10px;\n          padding: 0;\n          border: none; }\n        .ngx-select_multiple .ngx-select__clear {\n          line-height: initial;\n          margin-left: 5px;\n          margin-right: 0;\n          color: #000;\n          opacity: .5; }\n        .ngx-select__clear-icon {\n          display: inline-block;\n          font-size: inherit;\n          cursor: pointer;\n          position: relative;\n          width: 1em;\n          height: .75em;\n          padding: 0; }\n          .ngx-select__clear-icon:before, .ngx-select__clear-icon:after {\n            content: '';\n            position: absolute;\n            border-top: 3px solid;\n            width: 100%;\n            top: 50%;\n            left: 0;\n            margin-top: -1px; }\n          .ngx-select__clear-icon:before {\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .ngx-select__clear-icon:after {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg); }\n        .ngx-select__choices {\n          width: 100%;\n          height: auto;\n          max-height: 200px;\n          overflow-x: hidden;\n          margin-top: 0;\n          position: absolute; }\n        .ngx-select_multiple .ngx-select__choices {\n          margin-top: 1px; }\n        .ngx-select__item {\n          display: block;\n          padding: 3px 20px;\n          clear: both;\n          font-weight: 400;\n          line-height: 1.42857143;\n          white-space: nowrap;\n          cursor: pointer;\n          text-decoration: none; }\n        .ngx-select__item_disabled, .ngx-select__item_no-found {\n          cursor: default; }\n        .ngx-select__item_active {\n          color: #fff;\n          outline: 0;\n          background-color: #428bca; }\n        .ngx-select__selected-single, .ngx-select__selected-plural {\n          display: -webkit-inline-box;\n          display: -ms-inline-flexbox;\n          display: inline-flex;\n          -webkit-box-align: center;\n              -ms-flex-align: center;\n                  align-items: center;\n          overflow: hidden; }\n          .ngx-select__selected-single span, .ngx-select__selected-plural span {\n            overflow: hidden;\n            text-overflow: ellipsis; }\n        .ngx-select__selected-plural {\n          outline: 0;\n          margin: 0 3px 3px 0; }\n\n      /* Fix Bootstrap dropdown position when inside a input-group */\n      .input-group > .dropdown {\n        /* Instead of relative */\n        position: static; }\n    `],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true\n        }\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: DomSanitizer, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [NGX_SELECT_OPTIONS, ] }, { type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'items': [{ type: Input },],\n'optionValueField': [{ type: Input },],\n'optionTextField': [{ type: Input },],\n'optGroupLabelField': [{ type: Input },],\n'optGroupOptionsField': [{ type: Input },],\n'multiple': [{ type: Input },],\n'allowClear': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'noAutoComplete': [{ type: Input },],\n'disabled': [{ type: Input },],\n'defaultValue': [{ type: Input },],\n'autoSelectSingleOption': [{ type: Input },],\n'autoClearSearch': [{ type: Input },],\n'noResultsFound': [{ type: Input },],\n'size': [{ type: Input },],\n'searchCallback': [{ type: Input },],\n'typed': [{ type: Output },],\n'focus': [{ type: Output },],\n'blur': [{ type: Output },],\n'open': [{ type: Output },],\n'close': [{ type: Output },],\n'select': [{ type: Output },],\n'remove': [{ type: Output },],\n'navigated': [{ type: Output },],\n'mainElRef': [{ type: ViewChild, args: ['main', ] },],\n'inputElRef': [{ type: ViewChild, args: ['input', ] },],\n'choiceMenuElRef': [{ type: ViewChild, args: ['choiceMenu', ] },],\n'templateOption': [{ type: ContentChild, args: [NgxSelectOptionDirective, {read: TemplateRef}, ] },],\n'templateSelectedOption': [{ type: ContentChild, args: [NgxSelectOptionSelectedDirective, {read: TemplateRef}, ] },],\n'templateOptionNotFound': [{ type: ContentChild, args: [NgxSelectOptionNotFoundDirective, {read: TemplateRef}, ] },],\n'documentClick': [{ type: HostListener, args: ['document:focusin', ['$event'], ] },{ type: HostListener, args: ['document:click', ['$event'], ] },],\n};\n}\n\nfunction NgxSelectComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSelectComponent.ctorParameters;\n/** @type {?} */\nNgxSelectComponent.propDecorators;\n/** @type {?} */\nNgxSelectComponent.prototype.items;\n/** @type {?} */\nNgxSelectComponent.prototype.optionValueField;\n/** @type {?} */\nNgxSelectComponent.prototype.optionTextField;\n/** @type {?} */\nNgxSelectComponent.prototype.optGroupLabelField;\n/** @type {?} */\nNgxSelectComponent.prototype.optGroupOptionsField;\n/** @type {?} */\nNgxSelectComponent.prototype.multiple;\n/** @type {?} */\nNgxSelectComponent.prototype.allowClear;\n/** @type {?} */\nNgxSelectComponent.prototype.placeholder;\n/** @type {?} */\nNgxSelectComponent.prototype.noAutoComplete;\n/** @type {?} */\nNgxSelectComponent.prototype.disabled;\n/** @type {?} */\nNgxSelectComponent.prototype.defaultValue;\n/** @type {?} */\nNgxSelectComponent.prototype.autoSelectSingleOption;\n/** @type {?} */\nNgxSelectComponent.prototype.autoClearSearch;\n/** @type {?} */\nNgxSelectComponent.prototype.noResultsFound;\n/** @type {?} */\nNgxSelectComponent.prototype.size;\n/** @type {?} */\nNgxSelectComponent.prototype.searchCallback;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToRemoveSelected;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToOptionsOpen;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToOptionsClose;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToOptionsSelect;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToNavigateFirst;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToNavigatePrevious;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToNavigateNext;\n/** @type {?} */\nNgxSelectComponent.prototype.keyCodeToNavigateLast;\n/** @type {?} */\nNgxSelectComponent.prototype.typed;\n/** @type {?} */\nNgxSelectComponent.prototype.focus;\n/** @type {?} */\nNgxSelectComponent.prototype.blur;\n/** @type {?} */\nNgxSelectComponent.prototype.open;\n/** @type {?} */\nNgxSelectComponent.prototype.close;\n/** @type {?} */\nNgxSelectComponent.prototype.select;\n/** @type {?} */\nNgxSelectComponent.prototype.remove;\n/** @type {?} */\nNgxSelectComponent.prototype.navigated;\n/** @type {?} */\nNgxSelectComponent.prototype.mainElRef;\n/** @type {?} */\nNgxSelectComponent.prototype.inputElRef;\n/** @type {?} */\nNgxSelectComponent.prototype.choiceMenuElRef;\n/** @type {?} */\nNgxSelectComponent.prototype.templateOption;\n/** @type {?} */\nNgxSelectComponent.prototype.templateSelectedOption;\n/** @type {?} */\nNgxSelectComponent.prototype.templateOptionNotFound;\n/** @type {?} */\nNgxSelectComponent.prototype.optionsOpened;\n/** @type {?} */\nNgxSelectComponent.prototype.optionsFiltered;\n/** @type {?} */\nNgxSelectComponent.prototype.optionActive;\n/** @type {?} */\nNgxSelectComponent.prototype.itemsDiffer;\n/** @type {?} */\nNgxSelectComponent.prototype.defaultValueDiffer;\n/** @type {?} */\nNgxSelectComponent.prototype.actualValue;\n/** @type {?} */\nNgxSelectComponent.prototype.subjOptions;\n/** @type {?} */\nNgxSelectComponent.prototype.subjSearchText;\n/** @type {?} */\nNgxSelectComponent.prototype.subjOptionsSelected;\n/** @type {?} */\nNgxSelectComponent.prototype.subjExternalValue;\n/** @type {?} */\nNgxSelectComponent.prototype.subjDefaultValue;\n/** @type {?} */\nNgxSelectComponent.prototype.subjRegisterOnChange;\n/** @type {?} */\nNgxSelectComponent.prototype.cacheOptionsFilteredFlat;\n/** @type {?} */\nNgxSelectComponent.prototype.cacheElementOffsetTop;\n/** @type {?} */\nNgxSelectComponent.prototype._focusToInput;\n/** @type {?} */\nNgxSelectComponent.prototype.isFocused;\n/** @type {?} */\nNgxSelectComponent.prototype.onChange;\n/** @type {?} */\nNgxSelectComponent.prototype.onTouched;\n/** @type {?} */\nNgxSelectComponent.prototype.sanitizer;\n/** @type {?} */\nNgxSelectComponent.prototype.cd;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Directive, TemplateRef} from '@angular/core';\nexport class NgxSelectOptionDirective {\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngx-select-option]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgxSelectOptionDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectOptionDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSelectOptionDirective.ctorParameters;\n/** @type {?} */\nNgxSelectOptionDirective.prototype.template;\n}\n\nexport class NgxSelectOptionSelectedDirective {\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngx-select-option-selected]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgxSelectOptionSelectedDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectOptionSelectedDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSelectOptionSelectedDirective.ctorParameters;\n/** @type {?} */\nNgxSelectOptionSelectedDirective.prototype.template;\n}\n\nexport class NgxSelectOptionNotFoundDirective {\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) {\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[ngx-select-option-not-found]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction NgxSelectOptionNotFoundDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectOptionNotFoundDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxSelectOptionNotFoundDirective.ctorParameters;\n/** @type {?} */\nNgxSelectOptionNotFoundDirective.prototype.template;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\n\nconst /** @type {?} */ escapeString = escapeStringNs;\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'option';\n/**\n * @param {?} value\n * @param {?} text\n * @param {?} disabled\n * @param {?} data\n * @param {?=} _parent\n */\nconstructor(public value: number | string,\npublic text: string,\npublic disabled: boolean,\npublic data: any,\nprivate _parent: NgxSelectOptGroup = null) {\n    }\n/**\n * @return {?}\n */\npublic get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\nprivate cacheHighlightText: string;\nprivate cacheRenderedText: SafeHtml = null;\n/**\n * @param {?} sanitizer\n * @param {?} highlightText\n * @return {?}\n */\npublic renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nfunction NgxSelectOption_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectOption.prototype.type;\n/** @type {?} */\nNgxSelectOption.prototype.cacheHighlightText;\n/** @type {?} */\nNgxSelectOption.prototype.cacheRenderedText;\n/** @type {?} */\nNgxSelectOption.prototype.value;\n/** @type {?} */\nNgxSelectOption.prototype.text;\n/** @type {?} */\nNgxSelectOption.prototype.disabled;\n/** @type {?} */\nNgxSelectOption.prototype.data;\n/** @type {?} */\nNgxSelectOption.prototype._parent;\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'optgroup';\npublic optionsFiltered: NgxSelectOption[];\n/**\n * @param {?} label\n * @param {?=} options\n */\nconstructor(public label: string,\npublic options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n/**\n * @param {?} callbackFn\n * @return {?}\n */\npublic filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nfunction NgxSelectOptGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxSelectOptGroup.prototype.type;\n/** @type {?} */\nNgxSelectOptGroup.prototype.optionsFiltered;\n/** @type {?} */\nNgxSelectOptGroup.prototype.label;\n/** @type {?} */\nNgxSelectOptGroup.prototype.options;\n}\n\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n"],"names":["Observable","Subject","BehaviorSubject","escapeString"],"mappings":"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"}
